You are performing a surgical cleanup of the GlowBot application to transform it into a focused TikTok Viral Product Generator. This cleanup must be done carefully and safely with verification at each step.
üéØ OBJECTIVE
Remove ALL non-essential features while preserving core TikTok viral content generation functionality. The final app should have a clean, focused navigation with only essential features for TikTok creators.
üõ°Ô∏è SAFETY PROTOCOL
BEFORE MAKING ANY CHANGES:
1. Create a backup manifest:‚Ä®# List all files that will be affected
2. echo "=== FILES TO BE REMOVED ===" > cleanup_manifest.txt
3. echo "=== FILES TO BE RENAMED ===" >> cleanup_manifest.txt
4. echo "=== NAVIGATION ITEMS TO UPDATE ===" >> cleanup_manifest.txt
5. 
6. Stop if any errors occur - Do not proceed if you encounter import errors, missing dependencies, or breaking changes
7. Test after each major step - Verify the app still runs with npm run dev
8. Show me the manifest FIRST - Before deleting anything, show me the complete list of files you plan to modify
üìã STEP-BY-STEP EXECUTION
STEP 1: IDENTIFY FILES (DO NOT DELETE YET)
Find and list these files/components:
Pages to Remove:
# Find these page files:
- **/Template*Explorer* or **/TemplateExplorer*
- **/Product*Ideas* or **/ProductIdeas*
- **/Analytics*Dashboard* or **/AnalyticsDashboard*
- **/Content*Calendar* or **/ContentCalendar*
- **/Schedule*Manager* or **/ScheduleManager*
- **/Cross*Platform*Scheduling* or **/CrossPlatformScheduling*
- **/Performance*Analytics* or **/PerformanceAnalytics*
- **/Click*Tracking* or **/ClickTracking*
- **/Export*Import* or **/ExportImport*
- **/Webhook*Settings* or **/WebhookSettings*
- **/API*Integration*Hub* or **/APIIntegrationHub*
- **/Automation*Checklist* or **/AutomationChecklist*
- **/Emoji*Hashtag*Test* or **/EmojiHashtagTest*
- **/Competitive*Analysis* or **/CompetitiveAnalysis*
Components to Remove:
# Find these component files:
- Any Template Explorer components
- Any Calendar/Scheduling components  
- Any Analytics dashboard components
- Any Webhook/Integration components
- Any Click tracking components
- Any Export/Import components
Routes to Remove:
# Find route definitions in:
- client/src/App.tsx (or main router file)
- Look for routes matching removed pages
Output the complete file list for my approval

STEP 2: BACKUP NAVIGATION CONFIG
# Before any changes, create backup:
cp client/src/App.tsx client/src/App.backup.tsx
# Or whichever file has your navigation/routes

# If using a separate nav component:
cp client/src/components/Navigation.tsx client/src/components/Navigation.backup.tsx

STEP 3: UPDATE NAVIGATION STRUCTURE
Find your navigation component (likely one of these):
* client/src/components/Navigation.tsx
* client/src/components/Sidebar.tsx
* client/src/components/Layout.tsx
* Or navigation defined in App.tsx
Replace the navigation structure with this clean version:
// SIMPLIFIED NAVIGATION STRUCTURE

const navigationItems = [
  {
    section: "OVERVIEW",
    items: [
      { 
        icon: InfoIcon, 
        label: "About GlowBot", 
        path: "/about" 
      }
    ]
  },
  {
    section: "CORE",
    items: [
      { 
        icon: HomeIcon, 
        label: "Dashboard", 
        path: "/dashboard" 
      },
      { 
        icon: SparklesIcon, 
        label: "TikTok Generator", 
        path: "/generate" 
      }
    ]
  },
  {
    section: "CONTENT",
    items: [
      { 
        icon: HistoryIcon, 
        label: "Script History", 
        path: "/history" 
      },
      { 
        icon: LinkIcon, 
        label: "Affiliate Links", 
        path: "/affiliate-links" 
      }
    ]
  },
  {
    section: "AI TOOLS",
    items: [
      { 
        icon: TrendingUpIcon, 
        label: "Trending Products", 
        path: "/trending" 
      }
    ]
  },
  {
    section: "SETTINGS",
    items: [
      { 
        icon: ShieldIcon, 
        label: "FTC Disclosures", 
        path: "/compliance" 
      },
      { 
        icon: UserIcon, 
        label: "Account", 
        path: "/account" 
      }
    ]
  },
  {
    section: "SUPPORT",
    items: [
      { 
        icon: QuestionIcon, 
        label: "How It Works", 
        path: "/how-it-works" 
      },
      { 
        icon: MessageIcon, 
        label: "FAQ", 
        path: "/faq" 
      },
      { 
        icon: MailIcon, 
        label: "Contact", 
        path: "/contact" 
      }
    ]
  }
];

STEP 4: UPDATE ROUTING
Find your routing configuration (likely in App.tsx or routes.tsx)
Remove these routes:
// DELETE these route definitions:
<Route path="/template-explorer" ... />
<Route path="/product-ideas" ... />
<Route path="/analytics" ... />
<Route path="/calendar" ... />
<Route path="/schedule" ... />
<Route path="/cross-platform" ... />
<Route path="/performance" ... />
<Route path="/click-tracking" ... />
<Route path="/export" ... />
<Route path="/webhooks" ... />
<Route path="/api-hub" ... />
<Route path="/automation" ... />
<Route path="/emoji-test" ... />
<Route path="/competitive" ... />
Keep only these routes:
// KEEP these essential routes:
<Route path="/" element={<Dashboard />} />
<Route path="/dashboard" element={<Dashboard />} />
<Route path="/generate" element={<TikTokGenerator />} />
<Route path="/history" element={<ScriptHistory />} />
<Route path="/affiliate-links" element={<AffiliateLinks />} />
<Route path="/trending" element={<TrendingProducts />} />
<Route path="/compliance" element={<ComplianceCenter />} />
<Route path="/account" element={<Account />} />
<Route path="/how-it-works" element={<HowItWorks />} />
<Route path="/faq" element={<FAQ />} />
<Route path="/contact" element={<Contact />} />
<Route path="/about" element={<About />} />

STEP 5: RENAME COMPONENTS
Find and rename these files:
1. "Unified Generator" ‚Üí "TikTok Generator"‚Ä®# If file exists as UnifiedGenerator.tsx
2. mv client/src/components/UnifiedGenerator.tsx client/src/components/TikTokGenerator.tsx
3. # Or if it's a page:
4. mv client/src/pages/UnifiedGenerator.tsx client/src/pages/TikTokGenerator.tsx
5. 
6. # Update all imports of UnifiedGenerator to TikTokGenerator
7. 
8. "Content History" ‚Üí "Script History"‚Ä®# If file exists as ContentHistory.tsx
9. mv client/src/pages/ContentHistory.tsx client/src/pages/ScriptHistory.tsx
10. 
11. # Update all imports
12. 
13. "AI Trending Picks" ‚Üí "Trending Products"‚Ä®# If file exists as AITrendingPicks.tsx
14. mv client/src/pages/AITrendingPicks.tsx client/src/pages/TrendingProducts.tsx
15. 
16. # Update all imports
17. 
After renaming, update ALL import statements:
// Find and replace these imports throughout the codebase:
import UnifiedGenerator from ... ‚Üí import TikTokGenerator from ...
import ContentHistory from ... ‚Üí import ScriptHistory from ...
import AITrendingPicks from ... ‚Üí import TrendingProducts from ...

STEP 6: DELETE NON-ESSENTIAL FILES (ONLY AFTER APPROVAL)
‚ö†Ô∏è WAIT FOR MY APPROVAL BEFORE EXECUTING THIS STEP ‚ö†Ô∏è
Once I approve the manifest, delete these files/folders:
# Page files to delete:
rm -f client/src/pages/TemplateExplorer.tsx
rm -f client/src/pages/ProductIdeas.tsx
rm -f client/src/pages/AnalyticsDashboard.tsx
rm -f client/src/pages/ContentCalendar.tsx
rm -f client/src/pages/ScheduleManager.tsx
rm -f client/src/pages/CrossPlatformScheduling.tsx
rm -f client/src/pages/PerformanceAnalytics.tsx
rm -f client/src/pages/ClickTracking.tsx
rm -f client/src/pages/ExportImport.tsx
rm -f client/src/pages/WebhookSettings.tsx
rm -f client/src/pages/APIIntegrationHub.tsx
rm -f client/src/pages/AutomationChecklist.tsx
rm -f client/src/pages/EmojiHashtagTest.tsx
rm -f client/src/pages/CompetitiveAnalysis.tsx

# Component folders to delete (if they exist):
rm -rf client/src/components/TemplateExplorer/
rm -rf client/src/components/Analytics/
rm -rf client/src/components/Calendar/
rm -rf client/src/components/Scheduling/
rm -rf client/src/components/Webhooks/
rm -rf client/src/components/Integration/
rm -rf client/src/components/ClickTracking/
rm -rf client/src/components/ExportImport/

STEP 7: CLEAN UP IMPORTS
Find files that import deleted components:
# Search for broken imports:
grep -r "TemplateExplorer" client/src/
grep -r "ProductIdeas" client/src/
grep -r "AnalyticsDashboard" client/src/
grep -r "ContentCalendar" client/src/
grep -r "ScheduleManager" client/src/
grep -r "CrossPlatformScheduling" client/src/
grep -r "PerformanceAnalytics" client/src/
grep -r "ClickTracking" client/src/
grep -r "ExportImport" client/src/
grep -r "WebhookSettings" client/src/
grep -r "APIIntegrationHub" client/src/
grep -r "AutomationChecklist" client/src/
grep -r "EmojiHashtagTest" client/src/
grep -r "CompetitiveAnalysis" client/src/
Remove any import statements for deleted files

STEP 8: UPDATE DATABASE SCHEMA (OPTIONAL)
If deleted features had database tables, comment them out in shared/schema.ts:
// Comment out unused tables:
// export const scheduledPosts = pgTable(...) ‚ùå
// export const contentCalendar = pgTable(...) ‚ùå
// export const clickTracking = pgTable(...) ‚ùå
// export const webhookSettings = pgTable(...) ‚ùå

// Keep essential tables:
export const trendingProducts = pgTable(...) ‚úÖ
export const contentGenerations = pgTable(...) ‚úÖ
export const contentHistory = pgTable(...) ‚úÖ
export const amazonProducts = pgTable(...) ‚úÖ
export const affiliateLinks = pgTable(...) ‚úÖ
Note: Only comment out, don't delete (in case of rollback needed)

STEP 9: VERIFICATION CHECKLIST
After all changes, verify these work:
# 1. App starts without errors
npm run dev

# 2. Check console for errors (should be clean)

# 3. Test navigation:
‚úÖ Can navigate to Dashboard
‚úÖ Can navigate to TikTok Generator  
‚úÖ Can navigate to Script History
‚úÖ Can navigate to Trending Products
‚úÖ Can navigate to Account
‚úÖ Can navigate to FAQ/Support pages

# 4. Test core functionality:
‚úÖ Trending products load on Dashboard
‚úÖ Can generate a TikTok script
‚úÖ Generated script includes affiliate link
‚úÖ Can view script history
‚úÖ No 404 errors or broken routes
‚úÖ No import errors in console

# 5. Check removed features are gone:
‚ùå Template Explorer not in nav
‚ùå Analytics Dashboard not in nav
‚ùå Calendar/Scheduling not in nav
‚ùå Webhook Settings not in nav
‚ùå All removed pages return 404

STEP 10: FINAL CLEANUP
# Remove backup files if everything works:
rm client/src/App.backup.tsx
rm client/src/components/Navigation.backup.tsx

# Or keep them if you want to be extra safe

üö® ERROR HANDLING
IF YOU ENCOUNTER ERRORS AT ANY STEP:
1. STOP immediately - Do not proceed
2. Show me the exact error message
3. Show me which file caused the error
4. Show me the line number
5. Wait for my guidance before continuing
Common errors to watch for:
* Import errors (missing component)
* Route definition errors
* Navigation component errors
* TypeScript errors
* Build errors
If app won't start after changes:
1. Restore from backup: cp App.backup.tsx App.tsx
2. Show me what went wrong
3. We'll debug together

üìä SUCCESS CRITERIA
The cleanup is successful when:
‚úÖ App starts without errors (npm run dev) ‚úÖ Navigation shows only 12 items (organized in 6 sections) ‚úÖ All navigation links work (no 404s) ‚úÖ Core features work (trending products + TikTok generation) ‚úÖ No console errors related to missing components ‚úÖ No TypeScript compilation errors ‚úÖ App is visually clean and focused
The final navigation structure should be:
OVERVIEW (1 item)
  - About GlowBot

CORE (2 items)
  - Dashboard
  - TikTok Generator

CONTENT (2 items)
  - Script History
  - Affiliate Links

AI TOOLS (1 item)
  - Trending Products

SETTINGS (2 items)
  - FTC Disclosures
  - Account

SUPPORT (3 items)
  - How It Works
  - FAQ
  - Contact

TOTAL: 11 navigation items (down from 20+)

üéØ EXECUTION ORDER SUMMARY
1. ‚úÖ Identify all files to be modified (create manifest)
2. ‚úÖ Show me the manifest for approval
3. ‚úÖ Backup navigation/routing files
4. ‚úÖ Update navigation structure
5. ‚úÖ Update routing configuration
6. ‚úÖ Rename components (UnifiedGenerator ‚Üí TikTokGenerator, etc.)
7. ‚úÖ Delete non-essential files (ONLY after approval)
8. ‚úÖ Clean up broken imports
9. ‚úÖ Verify app works correctly
10. ‚úÖ Report results with checklist

üöÄ START HERE
Your first action should be:
"I will now scan the codebase to identify all files that need to be modified. I will create a manifest and show it to you for approval before making any changes."
Then create and show me:
1. List of files to be deleted
2. List of files to be renamed
3. List of navigation items to update
4. List of routes to remove
DO NOT proceed with deletions until I approve the manifest.
