I've attached the ScriptTok Unified Wireframes document that specifies the exact UI design for our TikTok content generation platform. Please implement the UI exactly as detailed in the wireframes.
 BEFORE making ANY changes, you MUST:
1. Inventory Check: Review ALL existing features in the current codebase
2. Functional Preservation: Every working feature must remain functional after UI updates
3. API Preservation: Do NOT modify or remove any API endpoints
4. State Management: Keep all existing state management logic intact
5. Data Flow: Preserve all data fetching, mutations, and query invalidation logic
Explicitly PRESERVE these systems:
* ✅ All API routes in server/api/* (no deletions)
* ✅ Perplexity Intelligence System (product research, competitor intel, trend analysis)
* ✅ Viral Score calculation and display logic
* ✅ Content generation history and ratings
* ✅ Usage quota tracking and billing logic
* ✅ Authentication and user session management
* ✅ All database queries and mutations
* ✅ Trend forecasting and competitor analysis features
* ✅ AI model selection (Claude, ChatGPT, Both)
* ✅ Multi-template generation capabilities
* ✅ Smart style recommendations based on ratings
* ✅ Platform caption generation (TikTok, Instagram, etc.)
* ✅ Niche filtering and product search
* ✅ Bulk operations and Pro tier features
* ✅ All existing React hooks and custom utilities
If you need to refactor a component:
1. First comment what the existing functionality does
2. Preserve ALL functional logic
3. Only update UI/styling elements
4. Test that data flow remains unchanged
5. Keep all onClick handlers, form submissions, and event listeners
Red Flags (STOP if you see these):
* 🚫 Deleting functions that aren't replaced
* 🚫 Removing API calls without alternatives
* 🚫 Commenting out working code "temporarily"
* 🚫 Simplifying complex logic that handles edge cases
* 🚫 Removing error handling or loading states
* 🚫 Deleting utility functions used elsewhere
 
Design System Requirements
Visual Style
* Background: bg-gray-50 (#f9fafb) for pages
* Cards: bg-white rounded-2xl shadow-sm with hover transitions
* Accent Color: #2563eb (blue-600)
* Spacing: Use gap-4 default, gap-6 for sections, gap-8 between major blocks
* Typography:
    * Headlines: font-bold with gradient text effects
    * Body: text-gray-700 for readability
    * Muted text: text-gray-600
Layout Standards
* Desktop Content Width: max-w-5xl mx-auto p-6 for pages
* Content Columns: max-w-3xl for focused content areas
* Mobile: Stack vertically, full-width cards with p-4 padding
* Buttons: rounded-xl px-4 py-2 with consistent hover states
Component Patterns
Use these Shadcn components consistently:
* Card, Badge, Button, Input, Textarea, Select
* Tabs, Accordion, Sheet (for mobile menu)
* Tooltip, Progress (for viral scores)
* Carousel (for mockups/products)
Pages to Refactor (Priority Order)
1. Landing Page (client/src/pages/LandingPage.tsx)
Current State: Exists but needs alignment with wireframes Required Updates:
* Hero section with gradient background and dual CTAs
* 2-column features grid with icons
* Mockup carousel section
* Pricing teaser (Free vs Pro preview)
* 3-card testimonials layout
* Final CTA footer with gradient background
2. Dashboard / Trend Dashboard (client/src/pages/Dashboard.tsx)
Current State: Functional but UI needs refinement Required Updates:
* Page header with refresh/export actions
* Sticky filter bar (niche, stage, search)
* Featured trend highlight card (hero treatment)
* Category tabs (Hot | Rising | Upcoming | Avoid)
* AI-powered picks in compact grid (3-4 per row)
* Info/tips section
* CTA footer driving to content generation
* Mobile: Collapsible filters, single-column cards, horizontal scroll tabs, sticky bottom CTA
3. Content Generator (client/src/pages/GenerateContent.tsx)
Current State: Functional but layout needs cleanup Required Updates:
* Optional trend summary card at top
* Clean prompt input area (textarea + selects + generate button)
* Viral score breakdown section (overall score + 5 metric bars + suggestions)
* Output cards grid with consistent styling
* Bottom toolbar (back, history, upgrade links)
4. Pricing Page (needs creation or update)
Create/Update: Dedicated pricing page Requirements:
* Hero with headline and dual CTAs
* 3-column plan cards (Free | Pro [Most Popular] | Creator+)
* Monthly/yearly toggle (if Pro plan exists)
* Optional comparison table
* FAQ accordion
* Final CTA banner
Mobile Responsiveness Requirements
Breakpoints
* Mobile: < 768px (single column, touch-optimized)
* Tablet: 768px - 1024px (2-column where appropriate)
* Desktop: > 1024px (full grid layouts)
Mobile-Specific Rules
1. Navigation: Use Sheet component for slide-in menu
2. Cards: Full-width with p-4 padding, stack vertically
3. Buttons: Minimum height h-12 (44px) for touch targets
4. Tabs: Horizontal scroll with snap behavior
5. Filters: Collapsible by default on mobile
6. CTAs: Sticky bottom CTA for key conversion actions
7. Carousels: Swipeable with visible scroll indicators
Accessibility Checklist
*  All interactive elements keyboard accessible (Tab navigation)
*  Visible focus rings on all focusable elements
*  Color contrast meets WCAG AA standards
*  Proper ARIA labels for icons and actions
*  Semantic HTML landmarks (header, main, nav, footer)
*  Skeleton loaders for async content
*  Screen reader friendly labels
Implementation Guidelines
Do:
* ✅ Use consistent spacing via Tailwind utilities (no magic numbers)
* ✅ Keep card heights consistent within grids
* ✅ Add subtle hover/focus transitions (transition-all duration-200)
* ✅ Use semantic color classes (success, warning, info via Badge variants)
* ✅ Implement loading states with skeleton components
* ✅ Test responsive behavior at 360px, 768px, 1024px, 1280px
* Before marking any page as "complete":
*  All buttons that worked before still work
*  All forms submit successfully
*  All API calls are preserved
*  All conditional rendering logic intact
*  All error states still display
*  All loading states still show
*  All data transformations preserved
*  All navigation links functional
*  All modals/dialogs still open/close
*  All filters and search still work
* Code Review Protocol
* After each file update:
* Compare line count (significant drops = potential deletions)
* Search for TODO/FIXME comments (indicates incomplete work)
* Verify all imports are still used
* Check that no // TODO: Implement comments were added
* Ensure no placeholder data replaced real functionality
* 
Don't:
* ❌ Create inline styles or one-off magic values
* ❌ Nest components more than 3 levels deep
* ❌ Duplicate code between Viral and Affiliate studios (use shared components)
* ❌ Break mobile layout with fixed widths
* ❌ Skip hover/focus states on interactive elements
Niche Color Coding
Apply these color schemes for niche badges:
* Beauty: bg-pink-100 text-pink-800
* Tech: bg-blue-100 text-blue-800
* Fashion: bg-purple-100 text-purple-800
* Fitness: bg-green-100 text-green-800
* Food: bg-orange-100 text-orange-800
* Travel: bg-cyan-100 text-cyan-800
* Pets: bg-yellow-100 text-yellow-800
Success Criteria
1. All pages match wireframe layouts pixel-perfectly
2. Consistent component styling across all pages
3. Smooth mobile experience with thumb-friendly interactions
4. No console errors or accessibility warnings
5. Fast page transitions and responsive UI feedback
6. Clean, maintainable code with reusable components
🔒 Final Validation
After completing all UI improvements, provide a Feature Preservation Report listing:
1. ✅ All preserved features (with file locations)
2. 🔄 Any refactored logic (with before/after comparison)
3. ⚠️ Any features that needed modification (with justification)
4. ❌ Confirmation that ZERO features were removed
If ANY feature was removed or broken, HALT and report it immediately for review.


Notes
* Focus on visual consistency and user experience
* Maintain existing functionality while improving UI/UX
* If wireframe details are ambiguous, choose the most user-friendly option
* Keep existing state management and API integrations intact

Please implement these UI improvements following the attached wireframes exactly. Start with the global design system updates, then refactor pages in priority order. Ensure mobile responsiveness throughout.
