You are working with a comprehensive GlowBot application that contains multiple features and modules. I need you to streamline this into a focused, standalone TikTok Viral Product Generator platform by removing non-essential features while preserving the core viral content generation functionality.
🎯 OBJECTIVE
Transform the current multi-feature GlowBot application into a focused TikTok Viral Product Generator that specializes in:

Real-time trending product discovery via Perplexity API
Viral content analysis and pattern extraction
AI-powered viral script generation
Amazon affiliate monetization
Multi-platform content optimization

✅ WHAT TO PRESERVE (Core Functionality)
Keep all trending product discovery systems:

Perplexity API integration for trending products
Real-time product research across niches
Product filtering and niche categorization

Keep viral content research and analysis:

TikTok/Instagram viral content research
Viral pattern extraction and analysis
Hook and format identification

Keep AI content generation engine:

OpenAI/Claude integration
Viral script generation
Multi-tone content creation
Template system for viral content

Keep Amazon affiliate monetization:

Amazon PA-API integration
Affiliate link generation
FTC compliance and disclosure
Revenue tracking basics

Keep multi-platform content formatting:

TikTok, Instagram Reels, YouTube Shorts optimization
Platform-specific formatting
Hashtag generation
Video duration estimation

Keep essential UI components:

Main Dashboard showing trending products
GenerateContent page as primary interface
TrendingProductsList component
ContentGenerator component
AmazonAffiliateDropdown component
VideoScriptGenerator component

Keep database essentials:

trending_products table
content_generations table
content_history table
amazon_products table
affiliate_links table
Basic analytics tables

Keep backend services:

perplexityTrends.ts
tiktokViralResearch.ts
contentGenerator.ts
amazonAffiliate.ts
multiPlatformContentGenerator.ts

❌ WHAT TO REMOVE (Non-Essential Features)
Remove CookAIng Marketing Engine entirely:

All cookaing-marketing folders and files
Recipe-focused content generation
Campaign management systems
Email marketing automation
Workflow automation

Remove advanced admin and management:

Complex admin dashboards
User role management beyond basic auth
Team collaboration features
Advanced permission systems

Remove bulk and automation features:

Bulk content generation
Scheduled bulk jobs
Automated posting systems
Content calendar automation

Remove advanced analytics:

Competitive analysis dashboards
Advanced sentiment analysis
Complex performance tracking
ROI analytics beyond basics

Remove complex workflow systems:

Approval workflows
Content moderation systems
Review and audit systems
Compliance beyond basic FTC

Remove external integrations:

Webhook systems
Third-party automation (Make.com, Zapier)
Social media direct publishing
Email service integrations

Remove enterprise features:

A/B testing systems
Experimental features
Support ticket systems
Knowledge base
Live chat systems

🗑️ SPECIFIC FILES/FOLDERS TO DELETE
DELETE THESE DIRECTORIES:
- /client/src/cookaing-marketing/ (entire directory)
- /server/cookaing-marketing/ (entire directory)
- /packages/cookaing-promo/ (entire directory)

DELETE THESE COMPONENT CATEGORIES:
- Admin dashboard components
- Bulk generation components
- Scheduling and automation components
- Advanced analytics components
- Workflow and approval components
- Support and ticketing components

DELETE THESE API ROUTES:
- CookAIng-specific endpoints
- Bulk generation endpoints
- Webhook endpoints
- Advanced analytics endpoints
- Admin-only management endpoints
📱 STREAMLINED NAVIGATION
Keep only these essential pages:

Dashboard - Trending products feed + quick generator access
Generate Content - Main content creation interface
Content History - Simple list of generated content
About/FAQ - Basic information and help

Remove these pages:

Admin panels
Bulk generation pages
Analytics dashboards
Workflow management
Campaign management
Email marketing pages
Support center
Advanced settings

🎨 SIMPLIFIED UI REQUIREMENTS
Main Dashboard should show:

Prominent trending products grid
Quick-access content generator
Platform selection
Recent generations (optional)

Content Generator should feature:

Product name input
Niche selection
Platform selection (TikTok, Instagram, YouTube)
Template type dropdown
Tone selection
Amazon affiliate link integration
Generate button (prominent)

Keep it creator-friendly:

Mobile-responsive design
Simple, intuitive navigation
Fast content generation flow
Clear monetization options
Easy copy-paste output

🔧 BACKEND SIMPLIFICATION
Keep these API endpoints:

POST /api/generateContent
GET /api/trending/products
POST /api/perplexity-trends/viral-research
GET /api/amazon/search
GET /api/amazon/items

Remove these API endpoints:

Bulk generation endpoints
Webhook endpoints
Campaign management endpoints
Email automation endpoints
Advanced analytics endpoints
Admin management endpoints

Keep these services:

Content generation service
Viral research service
Amazon affiliate service
Trending products service
Multi-platform formatter service

Remove these services:

Email service
Webhook service
Bulk processing service
Automation service
Advanced analytics service

🚨 CRITICAL EXECUTION ORDER
1. FIRST - Create Safety Backup:
bash# List all files being deleted
find . -name "*cookaing*" > files_to_delete.txt
find . -name "*bulk*" >> files_to_delete.txt
find . -name "*admin*" >> files_to_delete.txt
2. SECOND - Delete in This Order:

Delete /client/src/cookaing-marketing/
Delete /server/cookaing-marketing/
Delete /packages/cookaing-promo/
Delete admin components from /client/src/components/
Delete bulk/scheduling components
Delete advanced analytics components

3. THIRD - Update Routing:

Remove deleted page imports from App.tsx
Update navigation components
Ensure no broken imports
Simplify router to essential pages only

4. FOURTH - Clean Database Schema:

Comment out CookAIng tables in shared/schema.ts
Keep only essential tables:

trending_products
content_generations
content_history
amazon_products
affiliate_links
users (basic)
api_usage (basic tracking)



5. FIFTH - Update Main Layout:

Ensure TrendingProductsList displays on homepage
Make ContentGenerator the primary action
Remove complex admin UI elements
Simplify header/navigation

6. FINALLY - Test Core Flows:

✅ View trending products
✅ Select product and generate content
✅ See generated content with affiliate links
✅ Copy content for social media
✅ View content history

🛡️ DO NOT DELETE THESE CRITICAL FILES
Essential Services:

/server/services/perplexityTrends.ts
/server/services/tiktokViralResearch.ts
/server/services/contentGenerator.ts
/server/services/amazonAffiliate.ts
/server/services/multiPlatformContentGenerator.ts

Essential Components:

/client/src/components/ContentGenerator.tsx
/client/src/components/TrendingProductsList.tsx
/client/src/components/AmazonAffiliateDropdown.tsx
/client/src/components/VideoScriptGenerator.tsx

Essential Infrastructure:

Database connection files
Environment configuration
Server entry point (index.ts)
Client entry point (main.tsx)
Vite configuration
Package.json

🎯 EXPECTED FINAL STRUCTURE
/client/src/
  ├── pages/
  │   ├── Dashboard.tsx (trending products + generator)
  │   ├── ContentHistory.tsx (simple list)
  │   └── About.tsx (basic info)
  ├── components/
  │   ├── ContentGenerator.tsx ✅
  │   ├── TrendingProductsList.tsx ✅
  │   ├── AmazonAffiliateDropdown.tsx ✅
  │   ├── VideoScriptGenerator.tsx ✅
  │   ├── NicheSelector.tsx
  │   ├── PlatformSelector.tsx
  │   └── Navigation.tsx (simplified)
  └── App.tsx (simplified routing)

/server/
  ├── services/
  │   ├── perplexityTrends.ts ✅
  │   ├── tiktokViralResearch.ts ✅
  │   ├── contentGenerator.ts ✅
  │   ├── amazonAffiliate.ts ✅
  │   └── multiPlatformContentGenerator.ts ✅
  ├── api/
  │   ├── generateContent.ts ✅
  │   ├── perplexity-trends/ ✅
  │   │   └── viral-research.ts ✅
  │   └── amazon.ts ✅
  └── index.ts ✅

/shared/
  └── schema.ts (streamlined) ✅
📋 VERIFICATION CHECKLIST
After cleanup, verify these work:
✅ Application Startup:

 npm run dev starts without errors
 No missing import errors
 Database connects successfully
 Environment variables load correctly

✅ Core Functionality:

 Dashboard shows trending products
 Can select a niche and see relevant products
 Can click a product to use in generator
 Content generator form loads completely
 Can generate content for a product
 Generated content includes viral hooks
 Generated content includes affiliate links
 Can format content for multiple platforms

✅ API Endpoints:

 GET /api/trending/products returns data
 POST /api/generateContent works
 POST /api/perplexity-trends/viral-research works
 Amazon affiliate endpoints respond

✅ UI/UX:

 Navigation is clean and simple
 No broken links or routes
 Mobile responsive design works
 Content is easy to copy/paste

✅ Database:

 Migrations run successfully
 Essential tables exist
 No foreign key errors from deleted tables

🛑 ERROR HANDLING
IF YOU ENCOUNTER ERRORS:

Stop immediately
List the exact error message
Show which file is causing it
Identify missing dependencies or imports
Don't proceed until resolved
Ask for guidance if needed

Common issues to watch for:

Import statements referencing deleted files
Database foreign key constraints to deleted tables
API routes referencing deleted services
Components trying to use removed features

🚀 EXECUTION STEPS
Start by doing this:

Create a manifest of all files to be deleted
Show me the list for confirmation
Wait for my approval before deleting anything
Delete files in the specified order
Update imports and routes
Test core functionality
Report results with verification checklist

💡 FINAL RESULT
The streamlined platform should allow creators to:

Discover trending products across niches (beauty, tech, fashion, etc.)
Research viral content patterns for those products
Generate AI-powered viral scripts with hooks
Monetize with automatic Amazon affiliate links
Format content for TikTok, Instagram, YouTube Shorts
Access simple content history

The user experience should be:

Fast and intuitive
Focused on viral content creation
Mobile-friendly for creators on-the-go
Monetization-ready with affiliate links
Platform-optimized output