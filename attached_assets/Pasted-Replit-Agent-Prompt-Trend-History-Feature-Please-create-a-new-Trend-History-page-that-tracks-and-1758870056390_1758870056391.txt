Replit Agent Prompt: Trend History Feature

Please create a new “Trend History” page that tracks and displays historical trend data from both the Trend Forecaster and AI Trending Picks features. This should be added to the sidebar navigation below “Content History”.

⸻

Requirements:

1. New Sidebar Navigation Item:
	•	Add “Trend History” below “Content History” in the sidebar
	•	Use an appropriate icon (like Clock or History)

⸻

2. Database Schema Changes:

Create a new table to store trend history records with fields for:
	•	Date/timestamp when trend was fetched
	•	Source type (trend_forecaster or ai_trending_picks)
	•	Niche category
	•	Trend category (hot/rising/upcoming/declining for forecaster)
	•	All trend data including descriptions, volumes, growth percentages
	•	Associated products with names, prices, ASINs, and other metadata
	•	Raw JSON storage for complete data preservation

⸻

3. Page Layout - Two Main Sections:

Section 1: Trend Forecaster History
	•	Group trends by niche (Beauty, Tech, Fashion, Fitness, Food, Travel, Pets)
	•	Within each niche, categorize by trend type with clear visual indicators:
	•	🔥 HOT trends (red styling)
	•	📈 RISING trends (green styling)
	•	🔮 UPCOMING trends (blue styling)
	•	📄 AVOID/Declining trends (gray styling)
	•	Each trend entry should show:
	•	Trend name and description
	•	Volume/growth metrics (“42,000 videos this week”, “+28%”, etc.)
	•	Why it’s trending explanation
	•	Date fetched
	•	Expandable dropdown showing all associated products with:
	•	Product name
	•	Price (formatted string like “$15.99” or “$10/mo”)
	•	ASIN when available
	•	Price type (one-time/subscription/estimated)

Section 2: AI Trending Picks History
	•	Group by niche in organized cards/sections
	•	Each entry should display:
	•	Product title
	•	Mentions count (formatted like “650K mentions”)
	•	Engagement score when available
	•	Niche badge
	•	Source information (Perplexity, etc.)
	•	Pricing information (this is currently missing from the UI)
	•	Reason why it’s trending
	•	Date fetched/pulled
	•	Any additional metadata like viral keywords, descriptions

⸻

4. Data Integration:
	•	Modify the existing trend forecast API (/api/trend-forecast) to save results to the history table
	•	Modify the AI trending picks fetching (/api/pull-perplexity-trends) to save results to history
	•	Create new API endpoints to retrieve historical trend data
	•	Ensure all pricing information is properly stored and displayed

⸻

5. UI Features:
	•	Filtering options by date range, niche, and trend type
	•	Sorting options (newest first, by niche, by trend category)
	•	Search functionality to find specific trends or products
	•	Expandable/collapsible sections for better organization
	•	Clear date stamps showing when each trend was fetched
	•	Proper styling consistent with the existing app design

⸻

6. Technical Implementation:
	•	Follow the existing code patterns from TrendingAIPicks.tsx and TrendForecaster.tsx
	•	Use the same UI components (Card, Badge, Button, Tabs, etc.)
	•	Implement proper error handling and loading states
	•	Ensure responsive design for mobile devices

⸻

Goal:
Create a comprehensive historical view of all trend data that has been fetched, making it easy to track trend evolution over time and reference past trending products with their complete information including pricing details.
