COMPREHENSIVE PRODUCTION-GRADE UPGRADE PROMPT FOR REPLIT AGENT

TASK: Transform ScriptTok marketing pages from functional to production-grade (Pictory-level quality)
CONTEXT: Current pages (Landing, Features, Tools, Use Cases) are structurally solid (7/10) but lack the visual polish, social proof, interactivity, and conversion optimization of multi-million dollar SaaS apps like Pictory.
SCOPE: Upgrade ALL marketing pages with these systematic improvements:
═══════════════════════════════════════════════════════════════════════════
## 🎨 PHASE 1: VISUAL DESIGN SYSTEM UPGRADE
### 1.1 Create Enhanced Color System
- **File**: `client/src/index.css`
- Add secondary brand colors beyond purple:
  - Success green: `--success-50` through `--success-900`
  - Warning orange: `--warning-50` through `--warning-900`
  - Info blue: `--info-50` through `--info-900`
- Add gradient definitions:
  - `--gradient-hero`: purple → blue (keep current)
  - `--gradient-success`: green → teal
  - `--gradient-warning`: orange → red
  - `--gradient-feature`: unique per feature (purple, blue, green, orange, pink, indigo)
### 1.2 Typography Hierarchy Enhancement
- **File**: `client/src/index.css`
- Add display text classes:
  ```css
  .text-display {
    font-size: 4.5rem; /* 72px */
    font-weight: 800;
    letter-spacing: -0.02em;
    line-height: 1.1;
  }
  .text-display-sm {
    font-size: 3rem; /* 48px */
    font-weight: 700;
    letter-spacing: -0.01em;
  }
Add feature-specific text treatments (outlined text, gradient text)
1.3 Spacing & Layout System
Increase section padding: py-20 md:py-28 (was py-16)
Add max-width constraints: max-w-7xl for content, max-w-4xl for text blocks
Implement consistent card spacing: gap-8 md:gap-12
═══════════════════════════════════════════════════════════════════════════

🏠 PHASE 2: LANDING PAGE ENHANCEMENTS
2.1 Hero Section Transformation
File: client/src/pages/LandingPage.tsx
Replace static hero with:
Animated headline: Rotate between value props ("Save 10+ Hours Per Week" → "3x Your Engagement" → "$5K+ Monthly Revenue")
Product preview: Add animated mockup or screenshot carousel showing dashboard in action
Social proof badge: "Join 50,000+ Creators" with animated counter
Video CTA: "Watch 60-Second Demo" button with play icon
2.2 Social Proof Section (NEW)
Add after hero, before features:
<section className="py-12 bg-gray-50 border-y border-gray-200">
  <div className="container mx-auto max-w-6xl">
    <p className="text-center text-gray-600 mb-8">Trusted by creators at</p>
    <div className="grid grid-cols-2 md:grid-cols-5 gap-8 items-center opacity-60">
      {/* Logo placeholders - use grayscale filter */}
      <div>TikTok Creators</div>
      <div>YouTube Experts</div>
      <div>Instagram Influencers</div>
      <div>Marketing Agencies</div>
      <div>E-commerce Brands</div>
    </div>
  </div>
</section>
2.3 Value Proposition Section (NEW)
Add before Features section:
<section className="py-20 bg-white">
  <div className="container mx-auto max-w-6xl">
    <div className="grid md:grid-cols-2 gap-12 items-center">
      <div>
        <Badge>The Problem</Badge>
        <h2 className="text-4xl font-bold mt-4 mb-6">
          Creators Waste 10+ Hours Per Week on Scripts That Don't Convert
        </h2>
        <ul className="space-y-4">
          <li className="flex items-start">
            <X className="h-5 w-5 text-red-500 mr-3 mt-1" />
            <span>Manual research takes hours with no guarantee of virality</span>
          </li>
          {/* Add 3-4 more pain points */}
        </ul>
      </div>
      <div>
        <Badge className="bg-green-100 text-green-700">The Solution</Badge>
        <h2 className="text-4xl font-bold mt-4 mb-6">
          AI-Powered Scripts That Deliver 3x Engagement in 60 Seconds
        </h2>
        <ul className="space-y-4">
          <li className="flex items-start">
            <Check className="h-5 w-5 text-green-500 mr-3 mt-1" />
            <span>Instant trend discovery with proven viral formulas</span>
          </li>
          {/* Add 3-4 more solutions */}
        </ul>
      </div>
    </div>
  </div>
</section>
2.4 Testimonials Section (NEW)
Add after Features, before Pricing:
<section className="py-20 bg-gradient-to-br from-purple-50 to-blue-50">
  <div className="container mx-auto max-w-6xl">
    <h2 className="text-4xl font-bold text-center mb-12">
      Loved by 50,000+ Creators
    </h2>
    <div className="grid md:grid-cols-3 gap-8">
      {testimonials.map(t => (
        <Card className="p-6">
          <div className="flex items-center mb-4">
            <Avatar>
              <AvatarImage src={t.image} />
              <AvatarFallback>{t.initials}</AvatarFallback>
            </Avatar>
            <div className="ml-3">
              <p className="font-semibold">{t.name}</p>
              <p className="text-sm text-gray-600">{t.role}</p>
            </div>
          </div>
          <div className="flex mb-3">
            {[...Array(5)].map(() => <Star className="h-4 w-4 fill-yellow-400 text-yellow-400" />)}
          </div>
          <p className="text-gray-700">"{t.quote}"</p>
          <div className="mt-4 pt-4 border-t">
            <p className="text-sm font-semibold text-green-600">{t.result}</p>
          </div>
        </Card>
      ))}
    </div>
  </div>
</section>
═══════════════════════════════════════════════════════════════════════════

📄 PHASE 3: FEATURES PAGES ENHANCEMENTS
3.1 Add Visual Demonstrations
Files: All client/src/pages/features/*.tsx
For each feature page, add screenshot section after hero:
<section className="py-20 bg-gray-50">
  <div className="container mx-auto max-w-6xl">
    <div className="grid md:grid-cols-2 gap-12 items-center">
      <div>
        <Badge>See It In Action</Badge>
        <h2 className="text-3xl font-bold mt-4 mb-6">
          {feature.visualTitle}
        </h2>
        <p className="text-lg text-gray-600 mb-6">
          {feature.visualDescription}
        </p>
        <Button onClick={() => navigate('/dashboard')}>
          Try It Free <ArrowRight className="ml-2 h-4 w-4" />
        </Button>
      </div>
      <div className="relative">
        <div className="absolute inset-0 bg-gradient-to-br from-purple-400 to-blue-400 rounded-2xl blur-2xl opacity-20" />
        <img 
          src={`/screenshots/${feature.id}-demo.png`} 
          alt="Feature demo"
          className="relative rounded-2xl shadow-2xl border border-gray-200"
        />
      </div>
    </div>
  </div>
</section>
3.2 Before/After Comparison Sections
Add to InstantScriptCreationFeature.tsx, ProvenViralTemplatesFeature.tsx:
<section className="py-20">
  <div className="container mx-auto max-w-6xl">
    <h2 className="text-4xl font-bold text-center mb-12">
      The Old Way vs The ScriptTok Way
    </h2>
    <div className="grid md:grid-cols-2 gap-8">
      <Card className="p-8 bg-red-50 border-red-200">
        <div className="flex items-center mb-4">
          <X className="h-8 w-8 text-red-500 mr-3" />
          <h3 className="text-2xl font-bold">Without ScriptTok</h3>
        </div>
        <ul className="space-y-3">
          <li className="flex items-start">
            <Clock className="h-5 w-5 text-red-500 mr-2 mt-1" />
            <span>2-3 hours per script</span>
          </li>
          <li className="flex items-start">
            <TrendingDown className="h-5 w-5 text-red-500 mr-2 mt-1" />
            <span>50% scripts fail to go viral</span>
          </li>
          {/* Add more pain points */}
        </ul>
      </Card>
      <Card className="p-8 bg-green-50 border-green-200">
        <div className="flex items-center mb-4">
          <Check className="h-8 w-8 text-green-500 mr-3" />
          <h3 className="text-2xl font-bold">With ScriptTok</h3>
        </div>
        <ul className="space-y-3">
          <li className="flex items-start">
            <Zap className="h-5 w-5 text-green-500 mr-2 mt-1" />
            <span>60 seconds per script</span>
          </li>
          <li className="flex items-start">
            <TrendingUp className="h-5 w-5 text-green-500 mr-2 mt-1" />
            <span>89% viral success rate</span>
          </li>
          {/* Add more benefits */}
        </ul>
      </Card>
    </div>
  </div>
</section>
3.3 Interactive ROI Calculator (for InstantScriptCreationFeature.tsx)
Add before final CTA:
<section className="py-20 bg-gradient-to-br from-violet-600 to-purple-600 text-white">
  <div className="container mx-auto max-w-4xl">
    <h2 className="text-4xl font-bold text-center mb-12">
      Calculate Your Time & Revenue Savings
    </h2>
    <Card className="p-8">
      <div className="space-y-6">
        <div>
          <label className="block text-gray-700 mb-2">Scripts per week</label>
          <input 
            type="number" 
            className="w-full p-3 rounded-lg border"
            value={scriptsPerWeek}
            onChange={e => setScriptsPerWeek(Number(e.target.value))}
          />
        </div>
        <div className="bg-green-50 p-6 rounded-lg">
          <h3 className="text-2xl font-bold text-green-700 mb-2">
            You'll Save: {calculateSavings(scriptsPerWeek).hours} Hours/Week
          </h3>
          <p className="text-green-600">
            That's ${calculateSavings(scriptsPerWeek).revenue}/month in additional revenue
          </p>
        </div>
      </div>
    </Card>
  </div>
</section>
═══════════════════════════════════════════════════════════════════════════

🛠️ PHASE 4: TOOLS PAGES ENHANCEMENTS
4.1 Interactive Tool Previews
TemplateLibraryTool.tsx: Add live template gallery
<section className="py-20 bg-gray-50">
  <div className="container mx-auto max-w-6xl">
    <h2 className="text-3xl font-bold mb-8">Browse Templates</h2>
    <Tabs defaultValue="all">
      <TabsList>
        <TabsTrigger value="all">All Templates</TabsTrigger>
        <TabsTrigger value="viral">Viral Hooks</TabsTrigger>
        <TabsTrigger value="product">Product Showcase</TabsTrigger>
        <TabsTrigger value="tutorial">Tutorials</TabsTrigger>
      </TabsList>
      <TabsContent value="all" className="mt-8">
        <div className="grid md:grid-cols-3 gap-6">
          {templates.map(template => (
            <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer">
              <Badge>{template.category}</Badge>
              <h3 className="font-bold mt-3 mb-2">{template.name}</h3>
              <p className="text-sm text-gray-600 mb-4">{template.description}</p>
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-500">
                  {template.avgViews} avg views
                </span>
                <Button size="sm">Use Template</Button>
              </div>
            </Card>
          ))}
        </div>
      </TabsContent>
    </Tabs>
  </div>
</section>
4.2 Viral Score Simulator (ViralScoreAnalyzerTool.tsx)
Add interactive demo section:
<section className="py-20 bg-gradient-to-br from-purple-50 to-blue-50">
  <div className="container mx-auto max-w-4xl">
    <h2 className="text-3xl font-bold text-center mb-8">
      Try the Viral Score Analyzer
    </h2>
    <Card className="p-8">
      <label className="block font-semibold mb-3">Paste your script:</label>
      <Textarea 
        rows={6}
        value={demoScript}
        onChange={e => setDemoScript(e.target.value)}
        placeholder="Enter your video script here..."
        className="mb-4"
      />
      <Button onClick={analyzeDemoScript} className="w-full">
        Analyze Viral Score
      </Button>
      {demoScore && (
        <div className="mt-6 p-6 bg-gradient-to-br from-green-50 to-emerald-50 rounded-lg">
          <div className="text-center mb-4">
            <span className="text-6xl font-bold text-green-600">{demoScore}/100</span>
            <p className="text-gray-600 mt-2">Viral Potential Score</p>
          </div>
          <div className="space-y-3">
            <div className="flex justify-between items-center">
              <span>Hook Strength</span>
              <Progress value={demoScoreBreakdown.hook} className="w-1/2 ml-4" />
            </div>
            {/* Add more breakdown bars */}
          </div>
        </div>
      )}
    </Card>
  </div>
</section>
4.3 Video Tutorials Section
Add to ALL tool pages after "How It Works":
<section className="py-20 bg-white">
  <div className="container mx-auto max-w-6xl">
    <h2 className="text-3xl font-bold text-center mb-12">
      Watch How It Works
    </h2>
    <div className="grid md:grid-cols-2 gap-8">
      <Card className="overflow-hidden">
        <div className="aspect-video bg-gray-200 relative">
          <Play className="absolute inset-0 m-auto h-16 w-16 text-white cursor-pointer" />
          {/* Placeholder for video embed */}
        </div>
        <div className="p-6">
          <h3 className="font-bold mb-2">Quick Start Guide (2 min)</h3>
          <p className="text-gray-600">Learn the basics in under 2 minutes</p>
        </div>
      </Card>
      <Card className="overflow-hidden">
        <div className="aspect-video bg-gray-200 relative">
          <Play className="absolute inset-0 m-auto h-16 w-16 text-white cursor-pointer" />
        </div>
        <div className="p-6">
          <h3 className="font-bold mb-2">Advanced Tips (5 min)</h3>
          <p className="text-gray-600">Master pro techniques for maximum results</p>
        </div>
      </Card>
    </div>
  </div>
</section>
═══════════════════════════════════════════════════════════════════════════

👥 PHASE 5: USE CASES PAGE ENHANCEMENTS
5.1 Customer Success Stories
File: client/src/pages/UseCasesPage.tsx
Add after persona tabs:
<section className="py-20 bg-white">
  <div className="container mx-auto max-w-6xl">
    <h2 className="text-4xl font-bold text-center mb-12">
      Real Creators, Real Results
    </h2>
    <div className="grid md:grid-cols-2 gap-12">
      {successStories.map(story => (
        <Card className="p-8">
          <div className="flex items-center mb-6">
            <Avatar className="h-16 w-16">
              <AvatarImage src={story.avatar} />
            </Avatar>
            <div className="ml-4">
              <h3 className="font-bold text-lg">{story.name}</h3>
              <p className="text-gray-600">{story.role}</p>
            </div>
          </div>
          <blockquote className="text-lg mb-6">
            "{story.testimonial}"
          </blockquote>
          <div className="grid grid-cols-3 gap-4 pt-6 border-t">
            <div>
              <p className="text-2xl font-bold text-purple-600">{story.metric1Value}</p>
              <p className="text-sm text-gray-600">{story.metric1Label}</p>
            </div>
            <div>
              <p className="text-2xl font-bold text-green-600">{story.metric2Value}</p>
              <p className="text-sm text-gray-600">{story.metric2Label}</p>
            </div>
            <div>
              <p className="text-2xl font-bold text-blue-600">{story.metric3Value}</p>
              <p className="text-sm text-gray-600">{story.metric3Label}</p>
            </div>
          </div>
        </Card>
      ))}
    </div>
  </div>
</section>
5.2 Interactive Persona Quiz (NEW)
Add at top of page, before tabs:
<section className="py-20 bg-gradient-to-br from-purple-600 to-blue-600 text-white">
  <div className="container mx-auto max-w-4xl text-center">
    <h2 className="text-4xl font-bold mb-6">
      Which ScriptTok Plan Is Right for You?
    </h2>
    <p className="text-xl mb-8 opacity-90">
      Answer 3 quick questions to find your perfect match
    </p>
    <Button 
      size="lg" 
      className="bg-white text-purple-600 hover:bg-gray-100"
      onClick={() => setShowQuiz(true)}
    >
      Start Quiz (30 sec)
    </Button>
  </div>
</section>
═══════════════════════════════════════════════════════════════════════════

🎯 PHASE 6: CONVERSION OPTIMIZATION
6.1 Benefit-Specific CTAs
Replace generic "Get Started Free" across ALL pages:
Landing Hero: "Start Saving 10+ Hours/Week Free"
Trend Discovery: "Find Your Next Viral Trend Free"
Template Library: "Get 20+ Proven Templates Free"
Viral Score: "Score Your First Script Free"
Affiliate Studio: "Create Your First $5K Script Free"
6.2 Urgency & Scarcity Elements
Add to hero sections:
<div className="flex items-center justify-center gap-2 mt-4">
  <Badge className="bg-red-500 text-white">
    <Clock className="h-3 w-3 mr-1" />
    50,000+ Creators Already Joined
  </Badge>
  <Badge className="bg-orange-500 text-white">
    Limited: 10 Free Generations
  </Badge>
</div>
6.3 Exit-Intent Popup
Create: client/src/components/ExitIntentPopup.tsx
export function ExitIntentPopup() {
  const [isOpen, setIsOpen] = useState(false);
  useEffect(() => {
    const handleMouseLeave = (e: MouseEvent) => {
      if (e.clientY <= 0 && !sessionStorage.getItem('exitIntentShown')) {
        setIsOpen(true);
        sessionStorage.setItem('exitIntentShown', 'true');
      }
    };
    document.addEventListener('mouseleave', handleMouseLeave);
    return () => document.removeEventListener('mouseleave', handleMouseLeave);
  }, []);
  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogContent className="max-w-2xl">
        <DialogHeader>
          <DialogTitle className="text-3xl">Wait! Before You Go...</DialogTitle>
        </DialogHeader>
        <div className="py-6">
          <h3 className="text-2xl font-bold mb-4">
            Get Your First 10 Viral Scripts FREE
          </h3>
          <ul className="space-y-3 mb-6">
            <li className="flex items-center">
              <Check className="h-5 w-5 text-green-500 mr-3" />
              <span>No credit card required</span>
            </li>
            <li className="flex items-center">
              <Check className="h-5 w-5 text-green-500 mr-3" />
              <span>Access all templates</span>
            </li>
            <li className="flex items-center">
              <Check className="h-5 w-5 text-green-500 mr-3" />
              <span>Viral score for every script</span>
            </li>
          </ul>
          <Button className="w-full" size="lg">
            Claim My Free Scripts
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  );
}
6.4 Live Chat Widget
Add to MarketingLayout.tsx:
<Button
  className="fixed bottom-6 right-6 h-14 w-14 rounded-full shadow-lg z-50"
  onClick={() => setShowChat(true)}
>
  <MessageCircle className="h-6 w-6" />
</Button>
═══════════════════════════════════════════════════════════════════════════

🎨 PHASE 7: MICRO-INTERACTIONS & ANIMATIONS
7.1 Add Framer Motion Animations
Install: npm install framer-motion
Apply to all card grids:
import { motion } from 'framer-motion';
<motion.div
  initial={{ opacity: 0, y: 20 }}
  whileInView={{ opacity: 1, y: 0 }}
  viewport={{ once: true }}
  transition={{ duration: 0.5, delay: index * 0.1 }}
>
  <Card>...</Card>
</motion.div>
7.2 Hover Effects Enhancement
Add to all buttons and cards:
.hover-lift {
  transition: transform 0.2s, box-shadow 0.2s;
}
.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: 0 12px 24px rgba(0,0,0,0.15);
}
7.3 Number Counter Animations
For metrics like "50,000+ Creators":
import { useInView } from 'framer-motion';
import { useEffect, useState } from 'react';
function AnimatedCounter({ target }: { target: number }) {
  const [count, setCount] = useState(0);
  const ref = useRef(null);
  const isInView = useInView(ref);
  useEffect(() => {
    if (isInView) {
      let start = 0;
      const increment = target / 50;
      const timer = setInterval(() => {
        start += increment;
        if (start >= target) {
          setCount(target);
          clearInterval(timer);
        } else {
          setCount(Math.floor(start));
        }
      }, 20);
    }
  }, [isInView, target]);
  return <span ref={ref}>{count.toLocaleString()}</span>;
}
═══════════════════════════════════════════════════════════════════════════

📊 PHASE 8: ENHANCED PRICING PAGE
8.1 Feature Comparison Table
File: client/src/pages/PricingPage.tsx
Add after pricing cards:
<section className="py-20">
  <div className="container mx-auto max-w-6xl">
    <h2 className="text-3xl font-bold text-center mb-12">
      Compare All Features
    </h2>
    <Table>
      <TableHeader>
        <TableRow>
          <TableHead>Feature</TableHead>
          <TableHead className="text-center">Starter</TableHead>
          <TableHead className="text-center">Creator</TableHead>
          <TableHead className="text-center">Pro</TableHead>
          <TableHead className="text-center">Agency</TableHead>
        </TableRow>
      </TableHeader>
      <TableBody>
        {comparisonRows.map(row => (
          <TableRow key={row.feature}>
            <TableCell className="font-medium">{row.feature}</TableCell>
            <TableCell className="text-center">
              {row.starter === true ? <Check className="h-5 w-5 text-green-500 mx-auto" /> : row.starter}
            </TableCell>
            <TableCell className="text-center">
              {row.creator === true ? <Check className="h-5 w-5 text-green-500 mx-auto" /> : row.creator}
            </TableCell>
            <TableCell className="text-center">
              {row.pro === true ? <Check className="h-5 w-5 text-green-500 mx-auto" /> : row.pro}
            </TableCell>
            <TableCell className="text-center">
              {row.agency === true ? <Check className="h-5 w-5 text-green-500 mx-auto" /> : row.agency}
            </TableCell>
          </TableRow>
        ))}
      </TableBody>
    </Table>
  </div>
</section>
8.2 Annual Savings Calculator
Add above pricing cards:
<div className="text-center mb-8">
  <div className="inline-flex items-center bg-gray-100 rounded-full p-1">
    <Button
      variant={billingCycle === 'monthly' ? 'default' : 'ghost'}
      onClick={() => setBillingCycle('monthly')}
      className="rounded-full"
    >
      Monthly
    </Button>
    <Button
      variant={billingCycle === 'annual' ? 'default' : 'ghost'}
      onClick={() => setBillingCycle('annual')}
      className="rounded-full"
    >
      Annual <Badge className="ml-2 bg-green-500">Save 30%</Badge>
    </Button>
  </div>
</div>
═══════════════════════════════════════════════════════════════════════════

✅ IMPLEMENTATION CHECKLIST
Priority 1 (Immediate Impact):
 Add hero video/animation to Landing Page
 Create social proof section (logos/testimonials)
 Add before/after comparison to features
 Implement benefit-specific CTAs everywhere
 Add exit-intent popup
Priority 2 (High Impact):
 Add screenshot demos to all feature pages
 Create interactive tool previews (template gallery, score simulator)
 Add customer success stories to Use Cases
 Implement ROI calculator on InstantScriptCreationFeature
 Add video tutorial sections to all tool pages
Priority 3 (Polish):
 Implement framer-motion animations
 Add hover effects and micro-interactions
 Create animated number counters
 Add feature comparison table to pricing
 Implement live chat widget
Priority 4 (Advanced):
 Build interactive persona quiz
 Add competitor comparison sections
 Implement A/B testing framework
 Create industry-specific landing pages
 Add multi-language support
═══════════════════════════════════════════════════════════════════════════

🎯 SUCCESS METRICS
After implementation, pages should achieve:

Visual Appeal: 9/10 (vs current 6/10)
Conversion Rate: +40% improvement
Time on Page: +60% increase
Bounce Rate: -30% reduction
CTA Click Rate: +50% increase
═══════════════════════════════════════════════════════════════════════════

EXECUTION NOTES:

Start with Priority 1 items for immediate ROI
Use Pictory screenshots as visual reference but DON'T copy directly
Maintain ScriptTok brand identity (purple/violet primary)
Test each enhancement in isolation before deploying
Focus on conversion optimization alongside visual polish
This prompt provides systematic, production-grade upgrades that will elevate your pages from "functional" (7/10) to "exceptional" (9/10) - matching the polish of multi-million dollar SaaS applications like Pictory.